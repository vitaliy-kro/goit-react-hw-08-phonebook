{"version":3,"file":"static/js/948.816bc51c.chunk.js","mappings":"kUAEaA,EAAaC,EAAAA,KAAaC,MAAM,CAC3CC,SAAUF,EAAAA,KACPG,SAAS,oBACTC,IAAI,EAAG,iDACVC,MAAOL,EAAAA,KACJK,MAAM,yBACNF,SAAS,qBACZG,SAAUN,EAAAA,KACPG,SAAS,wBACTC,IAAI,EAAG,uD,UCGCG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CAAEV,SAAU,GAAIG,MAAO,GAAIC,SAAU,IACpDO,iBAAkBd,EAClBe,SAAU,cAAyD,IAA5CC,EAA2C,EAArDb,SAAgBG,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAcU,EAAgB,EAAhBA,UAChDR,GAASS,EAAAA,EAAAA,IAAS,CAAEF,KAAAA,EAAMV,MAAAA,EAAOC,SAAAA,KACjCU,GACD,EACDE,kBAAkB,EAClBC,gBAAgB,IAEZC,EAAYV,EAAOW,OAAOnB,SAC1BoB,EAAaZ,EAAOW,OAAOhB,MAC3BkB,EAAgBb,EAAOW,OAAOf,SAEpC,OACE,UAACkB,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,GAAI,GALR,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,GAAI,EAAGC,QAAS,kBAA9B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKX,GAAI,CAAEM,GAAI,GAAlD,sBAGA,kBAAMjB,SAAUJ,EAAO2B,aAAcC,YAAU,EAA/C,WACE,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEC,MAAOC,QAAQ1B,GACf2B,WAAY3B,EACZ4B,aAAa,aACbjC,KAAK,WACLZ,UAAQ,EACR8C,WAAS,EACTC,GAAG,WACHC,MAAM,OACNC,MAAO1C,EAAO2C,OAAOnD,SACrBoD,SAAU5C,EAAO6C,aACjBC,WAAS,OAGb,SAACjB,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEC,MAAOC,QAAQxB,GACfyB,WAAYzB,EACZnB,UAAQ,EACR8C,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNpC,KAAK,QACLiC,aAAa,QACbI,MAAO1C,EAAO2C,OAAOhD,MACrBiD,SAAU5C,EAAO6C,kBAGrB,SAAChB,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACC,EAAA,EAAD,CACEC,MAAOC,QAAQvB,GACfwB,WAAYxB,EACZpB,UAAQ,EACR8C,WAAS,EACTlC,KAAK,WACLoC,MAAM,WACNM,KAAK,WACLP,GAAG,WACHE,MAAO1C,EAAO2C,OAAO/C,SACrBgD,SAAU5C,EAAO6C,aACjBP,aAAa,uBAInB,SAACU,EAAA,EAAD,CACEjC,GAAI,CAAEkC,GAAI,EAAG5B,GAAI,GACjB0B,KAAK,SACLR,WAAS,EACTb,QAAQ,YAJV,0BASF,SAACwB,EAAA,EAAD,CAAMC,GAAG,SAAS1B,UAAW2B,EAAAA,GAAY1B,QAAQ,QAAjD,gDAKL,EC/FD,EARiB,WACf,OACE,UAAC2B,EAAA,EAAD,CAAWC,SAAS,IAApB,WACE,SAACzD,EAAD,IADF,MAIH,C","sources":["helpers/validationSchemas/signInValidation.js","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const SignSchema = Yup.object().shape({\n  username: Yup.string()\n    .required('Name is required')\n    .min(4, 'Name is too short - should be 4 chars minimum'),\n  email: Yup.string()\n    .email('Email must be a valid')\n    .required('Email is required'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(4, 'Password is too short - should be 4 chars minimum'),\n});\n","import { useDispatch } from 'react-redux';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { useFormik } from 'formik';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@mui/material';\nimport { register } from 'redux/auth/operations';\nimport { SignSchema } from 'helpers/validationSchemas/signInValidation';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: { username: '', email: '', password: '' },\n    validationSchema: SignSchema,\n    onSubmit: ({ username: name, email, password }, { resetForm }) => {\n      dispatch(register({ name, email, password }));\n      resetForm();\n    },\n    validateOnChange: false,\n    validateOnBlur: false,\n  });\n  const nameError = formik.errors.username;\n  const emailError = formik.errors.email;\n  const passwordError = formik.errors.password;\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        py: 2,\n      }}\n    >\n      <Avatar sx={{ mb: 1, bgcolor: 'secondary.main' }}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\" sx={{ mb: 3 }}>\n        Sign up\n      </Typography>\n      <form onSubmit={formik.handleSubmit} noValidate>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <TextField\n              error={Boolean(nameError)}\n              helperText={nameError}\n              autoComplete=\"given-name\"\n              name=\"username\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Name\"\n              value={formik.values.username}\n              onChange={formik.handleChange}\n              autoFocus\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              error={Boolean(emailError)}\n              helperText={emailError}\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              value={formik.values.email}\n              onChange={formik.handleChange}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              error={Boolean(passwordError)}\n              helperText={passwordError}\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              value={formik.values.password}\n              onChange={formik.handleChange}\n              autoComplete=\"new-password\"\n            />\n          </Grid>\n        </Grid>\n        <Button\n          sx={{ mt: 3, mb: 1 }}\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n        >\n          Register\n        </Button>\n      </form>\n      <Link to=\"/login\" component={RouterLink} variant=\"body2\">\n        Already have an account? Sign in\n      </Link>\n    </Box>\n  );\n};\n","import { Container } from '@mui/material';\nimport { RegisterForm } from 'components/RegisterForm';\n\nconst Register = () => {\n  return (\n    <Container maxWidth=\"l\">\n      <RegisterForm />;\n    </Container>\n  );\n};\n\nexport default Register;\n"],"names":["SignSchema","Yup","shape","username","required","min","email","password","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","validationSchema","onSubmit","name","resetForm","register","validateOnChange","validateOnBlur","nameError","errors","emailError","passwordError","Box","sx","display","flexDirection","alignItems","py","Avatar","mb","bgcolor","LockOutlined","Typography","component","variant","handleSubmit","noValidate","Grid","container","spacing","item","xs","TextField","error","Boolean","helperText","autoComplete","fullWidth","id","label","value","values","onChange","handleChange","autoFocus","type","Button","mt","Link","to","RouterLink","Container","maxWidth"],"sourceRoot":""}